use ::DialogWizard/BBDialog.bbj::BBDialog
use ::DialogWizard/DialogUtils.bbj::DialogUtils
use ::DialogWizard/DialogWizardRun.bbj::DialogWizardRun
rem /** DLGWIZ_OPTION_BEGIN("translator") **/
rem use ::translations/bbtranslator.bbj::BBTranslator
rem /** DLGWIZ_OPTION_END("translator") **/
use ::bbwindowutils.bbj::BBWindowUtils

use java.io.File
use java.io.FileWriter
use java.io.FileReader

use java.nio.file.Files

use java.util.Arrays
use java.util.Iterator
use java.util.ArrayList

use java.lang.reflect.Array
use java.nio.file.StandardCopyOption

use java.text.SimpleDateFormat

use java.util.List
use java.lang.StringBuilder

use java.util.zip.ZipInputStream
use java.util.zip.ZipEntry

use java.net.URL
use java.net.URLConnection
use java.net.HttpURLConnection

use java.io.InputStream
use java.io.OutputStream
use java.io.BufferedReader
use java.io.FileInputStream
use java.io.FileOutputStream
use java.io.InputStreamReader
use java.io.BufferedInputStream
use java.io.BufferedOutputStream
use java.io.ByteArrayInputStream
use java.io.ByteArrayOutputStream

class public CreateProjectDlg extends BBDialog

    field protected BBjAPI        API! = BBjAPI()
    field protected BBjNumber     TRUE = #API!.TRUE
    field protected BBjNumber     FALSE = #API!.FALSE
    field protected BBjSysGui     SysGui! = #API!.openSysGui("X0")
    field protected BBjThinClient ThinClient! = #API!.getThinClient()
    field protected BBjString     ClientLocale$ = #ThinClient!.getClientLocale()
    field protected BBjString     PgmDirectory$ = pgm(-2)(1,max(pos("\"=pgm(-2),-1),pos("/"=pgm(-2),-1)))

    rem /** DLGWIZ_OPTION_BEGIN("translator") **/
    rem field protected BBTranslator  Translator! = BBTranslator.getInstance("Message",#ClientLocale$,"en",#PgmDirectory$)
    rem /** DLGWIZ_OPTION_END("translator") **/

    field protected BBjNamespace  GroupNS! = #API!.getGroupNamespace()
    field protected BBjMDI        MDI!

    field public BBjString traceDir$
    field public BBjString traceMode$
    field public BBjNumber traceChan
    field public BBjString traceFile$

	rem /** DLGWIZ_RES configure.arc 100 **/

	rem /** DLGWIZ_FLD_BEGIN **/
	rem /** DLGWIZ_FLD_END **/


	rem /** DLGWIZ_FLC_BEGIN **/
	field protected BBjTopLevelWindow C_Window100!
	field protected BBjStaticText C_Window100__LBL_PROJECT_TEMPLATE!
	field protected BBjListBox C_Window100__LB_PROJECT_TEMPLATES!
	field protected BBjButton C_Window100__BTN_TEMPLATE_HOME!
	field protected BBjStaticText C_Window100__LBL_PROJECT_DIRECTORY!
	field protected BBjFileChooser C_Window100__DIR_SELECTOR!
	field protected BBjCEdit C_CED_DESC!
	rem /** DLGWIZ_FLC_END **/


    field public BBjTopLevelWindow Wnd!

    field private java.util.ArrayList templates!

    rem this variable receives the directory after successfully creating the project
    field public BBjString ProjectDir$

    rem /**
    rem * Constructor CreateProjectDlg
    rem */
    method public CreateProjectDlg()
        #super!("configure.arc",100)

        rem Check if BBjSysGui object is still valid. If not re-create it.
        #SysGui!.getContext(err=*next); sg_ok=1
        if !sg_ok then
            #SysGui!=#API!.openSysGui("X0")
        endif

        if stbl("+USER_LOCALE",err=*endif)<>"" then
            #ClientLocale$ = stbl("+USER_LOCALE")
            rem /** DLGWIZ_OPTION_BEGIN("translator") **/
            rem #Translator! = BBTranslator.getInstance("createproject",#ClientLocale$,"en",#PgmDirectory$)
            rem /** DLGWIZ_OPTION_END("translator") **/
        endif

        #Wnd!=#super!.getWndTop()
        if #API!.isInMDI() then #MDI!=#API!.getMDI()

        rem /** DLGWIZ_OPTION_BEGIN("translator") **/
        rem DialogUtils.buildDialogProperties(#Translator!,#super!.getCtrlVect())
        rem /** DLGWIZ_OPTION_END("translator") **/

        if #Wnd!<>null() then
            #initToolBar()
            #setCallbacks()
        endif
    methodend

    rem /**
    rem * Method initToolBar:
    rem * Setup toolbar
    rem */
    method protected void initToolBar()
	    rem /** DLGWIZ_OPTION_BEGIN("toolbar[Custom Form]") **/
        rem #super!.addToolBar(1,1,#Wnd!.getWidth(),#Wnd!.getHeight()+32,#Wnd!.getWidth(),31,0,#this!,"")
	    rem /** DLGWIZ_OPTION_END("toolbar[Custom Form]") **/

	    rem /** DLGWIZ_OPTION_BEGIN("toolbar[Maintenance Form]") **/
	    rem #super!.addToolBar(2,1,#Wnd!.getWidth(),#Wnd!.getHeight()+32,#Wnd!.getWidth(),31,0,#this!,stbl("+DIR_IMG")+"im_nav_tool_top.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,3,1,26,26,"","NEW",#Translator!,"New/clear form",1,0,stbl("+DIR_IMG")+"im_tb_new_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.IMAGE_CONTROL,29,3,8,23,"","",null(),"",0,0,stbl("+DIR_IMG")+"im_sep_space.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,37,1,26,26,"","DEL",#Translator!,"Delete current record",1,0,stbl("+DIR_IMG")+"im_tb_del_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.IMAGE_CONTROL,63,3,8,23,"","",null(),"",0,0,stbl("+DIR_IMG")+"im_sep_space.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,71,1,26,26,"","SAV",#Translator!,"Save current data",1,0,stbl("+DIR_IMG")+"im_tb_sav_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.IMAGE_CONTROL,97,3,8,23,"","",null(),"",0,0,stbl("+DIR_IMG")+"im_sep_space.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,105,1,26,26,"","FST",#Translator!,"Display first record",1,0,stbl("+DIR_IMG")+"im_tb_fst_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,131,1,26,26,"","PRV",#Translator!,"Display previous record",1,0,stbl("+DIR_IMG")+"im_tb_prv_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,157,1,26,26,"","NXT",#Translator!,"Display next record",1,0,stbl("+DIR_IMG")+"im_tb_nxt_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,183,1,26,26,"","LST",#Translator!,"Display last record",1,0,stbl("+DIR_IMG")+"im_tb_lst_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.IMAGE_CONTROL,209,3,8,23,"","",null(),"",0,0,stbl("+DIR_IMG")+"im_sep_space.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,217,1,26,26,"","SCH",#Translator!,"Record query",1,0,stbl("+DIR_IMG")+"im_tb_sch_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,243,1,26,26,"","DMR",#Translator!,"Display master record",1,0,stbl("+DIR_IMG")+"im_tb_dmr_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.IMAGE_CONTROL,269,3,8,23,"","",null(),"",0,0,stbl("+DIR_IMG")+"im_sep_space.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,277,1,26,26,"","OPT",#Translator!,"Display additional options",1,0,stbl("+DIR_IMG")+"im_tb_opt_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.IMAGE_CONTROL,303,3,8,23,"","",null(),"",0,0,stbl("+DIR_IMG")+"im_sep_space.png")
        rem /** DLGWIZ_OPTION_END("toolbar[Maintenance Form]") **/

        rem /** DLGWIZ_OPTION_BEGIN("toolbar[Maintenance Grid]") **/
        rem #super!.addToolBar(3,1,#Wnd!.getWidth(),#Wnd!.getHeight()+32,#Wnd!.getWidth(),31,0,#this!,stbl("+DIR_IMG")+"im_nav_tool_top.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,3,1,26,26,"","ADE",#Translator!,"Add new",1,0,stbl("+DIR_IMG")+"im_tb_ade_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,29,1,26,26,"","INS",#Translator!,"Insert new",1,0,stbl("+DIR_IMG")+"im_tb_ins_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,55,1,26,26,"","EDB",#Translator!,"Edit",1,0,stbl("+DIR_IMG")+"im_tb_edb_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.IMAGE_CONTROL,81,3,8,23,"","",null(),"",0,0,stbl("+DIR_IMG")+"im_sep_space.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,89,1,26,26,"","DEL",#Translator!,"Delete current record",1,0,stbl("+DIR_IMG")+"im_tb_del_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.IMAGE_CONTROL,115,3,8,23,"","",null(),"",0,0,stbl("+DIR_IMG")+"im_sep_space.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,123,1,26,26,"","SAV",#Translator!,"Save current data",1,0,stbl("+DIR_IMG")+"im_tb_sav_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.IMAGE_CONTROL,149,3,8,23,"","",null(),"",0,0,stbl("+DIR_IMG")+"im_sep_space.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,157,1,26,26,"","FND",#Translator!,"Find field records",1,0,stbl("+DIR_IMG")+"im_tb_fnd_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,183,1,26,26,"","DMR",#Translator!,"Display master record",1,0,stbl("+DIR_IMG")+"im_tb_dmr_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,209,1,26,26,"","EXP",#Translator!,"Expand grid record",1,0,stbl("+DIR_IMG")+"im_tb_exp_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,235,1,26,26,"","CAL",#Translator!,"Display calendar",1,0,stbl("+DIR_IMG")+"im_tb_cal_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.IMAGE_CONTROL,261,3,8,23,"","",null(),"",0,0,stbl("+DIR_IMG")+"im_sep_space.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,269,1,26,26,"","LNK",#Translator!,"Launch link",1,0,stbl("+DIR_IMG")+"im_tb_lnk_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,295,1,26,26,"","DRL",#Translator!,"Drilldown",1,0,stbl("+DIR_IMG")+"im_tb_drl_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.IMAGE_CONTROL,321,3,8,23,"","",null(),"",0,0,stbl("+DIR_IMG")+"im_sep_space.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,329,1,26,26,"","OPT",#Translator!,"Display additional options",1,0,stbl("+DIR_IMG")+"im_tb_opt_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.IMAGE_CONTROL,355,3,8,23,"","",null(),"",0,0,stbl("+DIR_IMG")+"im_sep_space.png")
        rem /** DLGWIZ_OPTION_END("toolbar[Maintenance Grid]") **/

        rem /** DLGWIZ_OPTION_BEGIN("toolbar[Header Detail]") **/
        rem #super!.addToolBar(4,1,#Wnd!.getWidth(),#Wnd!.getHeight()+32,#Wnd!.getWidth(),31,0,#this!,stbl("+DIR_IMG")+"im_nav_tool_top.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,3,1,26,26,"","NEW",#Translator!,"New/clear form",1,0,stbl("+DIR_IMG")+"im_tb_new_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,29,1,26,26,"","ADE",#Translator!,"Add new",1,0,stbl("+DIR_IMG")+"im_tb_ade_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,55,1,26,26,"","INS",#Translator!,"Insert new",1,0,stbl("+DIR_IMG")+"im_tb_ins_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,81,1,26,26,"","EDB",#Translator!,"Edit",1,0,stbl("+DIR_IMG")+"im_tb_edb_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,107,1,26,26,"","DEL",#Translator!,"Delete current record",1,0,stbl("+DIR_IMG")+"im_tb_del_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.IMAGE_CONTROL,133,3,8,23,"","",null(),"",0,0,stbl("+DIR_IMG")+"im_sep_space.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,141,1,26,26,"","SAV",#Translator!,"Save current data",1,0,stbl("+DIR_IMG")+"im_tb_sav_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.IMAGE_CONTROL,167,3,8,23,"","",null(),"",0,0,stbl("+DIR_IMG")+"im_sep_space.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,175,1,26,26,"","FST",#Translator!,"Display first record",1,0,stbl("+DIR_IMG")+"im_tb_fst_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,201,1,26,26,"","PRV",#Translator!,"Display previous record",1,0,stbl("+DIR_IMG")+"im_tb_prv_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,227,1,26,26,"","NXT",#Translator!,"Display next record",1,0,stbl("+DIR_IMG")+"im_tb_nxt_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,253,1,26,26,"","LST",#Translator!,"Display last record",1,0,stbl("+DIR_IMG")+"im_tb_lst_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.IMAGE_CONTROL,279,3,8,23,"","",null(),"",0,0,stbl("+DIR_IMG")+"im_sep_space.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,287,1,26,26,"","SCH",#Translator!,"Record query",1,0,stbl("+DIR_IMG")+"im_tb_sch_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,313,1,26,26,"","FND",#Translator!,"Find field records",1,0,stbl("+DIR_IMG")+"im_tb_fnd_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,339,1,26,26,"","DMR",#Translator!,"Display master record",1,0,stbl("+DIR_IMG")+"im_tb_dmr_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,365,1,26,26,"","EXP",#Translator!,"Expand grid record",1,0,stbl("+DIR_IMG")+"im_tb_exp_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,391,1,26,26,"","CAL",#Translator!,"Display calendar",1,0,stbl("+DIR_IMG")+"im_tb_cal_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.IMAGE_CONTROL,417,3,8,23,"","",null(),"",0,0,stbl("+DIR_IMG")+"im_sep_space.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,425,1,26,26,"","LNK",#Translator!,"Launch link",1,0,stbl("+DIR_IMG")+"im_tb_lnk_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,451,1,26,26,"","DRL",#Translator!,"Drilldown",1,0,stbl("+DIR_IMG")+"im_tb_drl_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.IMAGE_CONTROL,477,3,8,23,"","",null(),"",0,0,stbl("+DIR_IMG")+"im_sep_space.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,485,1,26,26,"","OPT",#Translator!,"Display additional options",1,0,stbl("+DIR_IMG")+"im_tb_opt_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.IMAGE_CONTROL,511,3,8,23,"","",null(),"",0,0,stbl("+DIR_IMG")+"im_sep_space.png")
        rem /** DLGWIZ_OPTION_END("toolbar[Header Detail]") **/

        rem /** DLGWIZ_OPTION_BEGIN("toolbar[Options Entry Form]") **/
        rem #super!.addToolBar(5,1,#Wnd!.getWidth(),#Wnd!.getHeight()+32,#Wnd!.getWidth(),31,0,#this!,stbl("+DIR_IMG")+"im_nav_tool_top.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,3,1,26,26,"","NEW",#Translator!,"New/clear form",1,0,stbl("+DIR_IMG")+"im_tb_new_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,29,1,26,26,"","SAV",#Translator!,"Save current data",1,0,stbl("+DIR_IMG")+"im_tb_sav_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.IMAGE_CONTROL,55,3,8,23,"","",null(),"",0,0,stbl("+DIR_IMG")+"im_sep_space.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,63,1,26,26,"","RUN",#Translator!,"Run process",1,0,stbl("+DIR_IMG")+"im_tb_run_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.IMAGE_CONTROL,89,3,8,23,"","",null(),"",0,0,stbl("+DIR_IMG")+"im_sep_space.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,97,1,26,26,"","DMR",#Translator!,"Display master record",1,0,stbl("+DIR_IMG")+"im_tb_dmr_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.IMAGE_CONTROL,123,3,8,23,"","",null(),"",0,0,stbl("+DIR_IMG")+"im_sep_space.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,131,1,26,26,"","OPT",#Translator!,"Display additional options",1,0,stbl("+DIR_IMG")+"im_tb_opt_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.IMAGE_CONTROL,157,3,8,23,"","",null(),"",0,0,stbl("+DIR_IMG")+"im_sep_space.png")
        rem /** DLGWIZ_OPTION_END("toolbar[Options Entry Form]") **/

        rem /** DLGWIZ_OPTION_BEGIN("toolbar[Options Entry Grid]") **/
        rem #super!.addToolBar(6,1,#Wnd!.getWidth(),#Wnd!.getHeight()+32,#Wnd!.getWidth(),31,0,#this!,stbl("+DIR_IMG")+"im_nav_tool_top.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,3,1,26,26,"","ADE",#Translator!,"Add new",1,0,stbl("+DIR_IMG")+"im_tb_ade_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,29,1,26,26,"","INS",#Translator!,"Insert new",1,0,stbl("+DIR_IMG")+"im_tb_ins_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,55,1,26,26,"","EDB",#Translator!,"Edit",1,0,stbl("+DIR_IMG")+"im_tb_edb_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.IMAGE_CONTROL,81,3,8,23,"","",null(),"",0,0,stbl("+DIR_IMG")+"im_sep_space.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,89,1,26,26,"","DEL",#Translator!,"Delete current record",1,0,stbl("+DIR_IMG")+"im_tb_del_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.IMAGE_CONTROL,115,3,8,23,"","",null(),"",0,0,stbl("+DIR_IMG")+"im_sep_space.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,123,1,26,26,"","SAV",#Translator!,"Save current data",1,0,stbl("+DIR_IMG")+"im_tb_sav_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,149,1,26,26,"","RUN",#Translator!,"Run process",1,0,stbl("+DIR_IMG")+"im_tb_run_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.IMAGE_CONTROL,175,3,8,23,"","",null(),"",0,0,stbl("+DIR_IMG")+"im_sep_space.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,183,1,26,26,"","FND",#Translator!,"Find field records",1,0,stbl("+DIR_IMG")+"im_tb_fnd_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,209,1,26,26,"","DMR",#Translator!,"Display master record",1,0,stbl("+DIR_IMG")+"im_tb_dmr_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,235,1,26,26,"","EXP",#Translator!,"Expand grid record",1,0,stbl("+DIR_IMG")+"im_tb_exp_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,261,1,26,26,"","CAL",#Translator!,"Display calendar",1,0,stbl("+DIR_IMG")+"im_tb_cal_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.IMAGE_CONTROL,287,3,8,23,"","",null(),"",0,0,stbl("+DIR_IMG")+"im_sep_space.png")
        rem #super!.addToolBarCtrl(#SysGui!.MENUBUTTON_CONTROL,295,1,26,26,"","OPT",#Translator!,"Display additional options",1,0,stbl("+DIR_IMG")+"im_tb_opt_m.png")
        rem #super!.addToolBarCtrl(#SysGui!.IMAGE_CONTROL,321,3,8,23,"","",null(),"",0,0,stbl("+DIR_IMG")+"im_sep_space.png")
        rem /** DLGWIZ_OPTION_END("toolbar[Options Entry Grid]") **/  
    methodend

    rem /**
    rem * Method setCallbacks:
    rem * Set control callbacks
    rem */
    method protected void setCallbacks()
        if #API!.isInMDI() then #MDI!.registerMDIClosingCallback(#this!,"onMDIClosing")
        #GroupNS!.setCallbackForVariableChange("debug_mode",#this!,"doDebugTrace")
        #GroupNS!.setCallbackForVariableChange("trace_mode",#this!,"doDebugTrace")
		rem /** DLGWIZ_CBS_BEGIN **/
		#super!.getControlByName("Window100").setCallback(BBjAPI.ON_CLOSE,#this!,"Window100__ON_CLOSE")
		#super!.getControlByName("DIR_SELECTOR").setCallback(BBjAPI.ON_FILECHOOSER_CANCEL,#this!,"DIR_SELECTOR__ON_FILECHOOSER_CANCEL")
		#super!.getControlByName("DIR_SELECTOR").setCallback(BBjAPI.ON_FILECHOOSER_APPROVE,#this!,"DIR_SELECTOR__ON_FILECHOOSER_APPROVE")
		#super!.getControlByName("BTN_TEMPLATE_HOME").setCallback(BBjAPI.ON_BUTTON_PUSH,#this!,"BTN_TEMPLATE_HOME__ON_BUTTON_PUSH")
		#super!.getControlByName("LB_PROJECT_TEMPLATES").setCallback(BBjAPI.ON_LIST_CLICK,#this!,"LB_PROJECT_TEMPLATES__ON_LIST_CLICK")
		rem /** DLGWIZ_CBS_END **/

    methodend

    rem /**
    rem * Method doDataExchange:
    rem * Set controls with program variables
    rem * @param BBjNumber pInitFlag: Controls are initialized, if true
    rem */
    method protected void doDataExchange(BBjNumber pInitFlag)
		rem /** DLGWIZ_DDX_BEGIN **/
		rem /** DLGWIZ_DDX_END **/

    methodend

    rem /**
    rem * Method doModal:
    rem * Initialize and display dialog (contains PROCESS_EVENTS)
    rem * @see doDataExchange(BBjNumber pInitFlag)
    rem * @see onInitDialog()
    rem * @see onExitDialog()
    rem * @return BBjNumber Answer: 0=Passed required fields check, 1=Dialog canceled/closed
    rem */
    method public BBjNumber doModal()

        #API!.setCustomEventCallback("ReturnAnswer","do_return")
        #API!.setCustomEventCallback("CancelAnswer","do_cancel")

        #doDataExchange(#TRUE)
        #super!.setAllValidated(#TRUE)

        #onInitDialog()
        #Wnd!.setVisible(#TRUE)

        do_process_events:
            process_events,err=*same

        do_return:
            #doDataExchange(#FALSE)
            if #super!.getAllValidated()=0 then
                #super!.setAllValidated(#TRUE)
                goto do_process_events
            endif

        do_cancel:
            #onExitDialog()
            #Wnd!.destroy()

        methodret #super!.getAnswer()
    methodend

    rem /**
    rem * Method onInitDialog:
    rem * Your custom initialization
    rem */
    method public void onInitDialog()
	rem /** DLGWIZ_INI_BEGIN **/
	#C_Window100! = cast(BBjTopLevelWindow,#super!.getControlByName("Window100"))
	#C_Window100__LBL_PROJECT_TEMPLATE! = cast(BBjStaticText,#super!.getControlByName("LBL_PROJECT_TEMPLATE"))
	#C_Window100__LB_PROJECT_TEMPLATES! = cast(BBjListBox,#super!.getControlByName("LB_PROJECT_TEMPLATES"))
	#C_Window100__BTN_TEMPLATE_HOME! = cast(BBjButton,#super!.getControlByName("BTN_TEMPLATE_HOME"))
	#C_Window100__LBL_PROJECT_DIRECTORY! = cast(BBjStaticText,#super!.getControlByName("LBL_PROJECT_DIRECTORY"))
	#C_Window100__DIR_SELECTOR! = cast(BBjFileChooser,#super!.getControlByName("DIR_SELECTOR"))
	#C_CED_DESC! = cast(BBjCEdit,#super!.getControlByName("CED_DESC"))
	rem /** DLGWIZ_INI_END **/

        rem uncomment the next line to center window
        rem BBWindowUtils.centerWindow(#Wnd!)
        #doDebugTrace(null())
        #templates! = new java.util.ArrayList()
        ch=unt
        open(ch)"DWCJ/cfg/projecttemplates.txt"
        while 1
            read (ch,end=*break)tpl$
            if tpl$="" then continue
            #templates!.add(tpl$)
            tpl!=new String(tpl$).split(";")
            print tpl![0]
            #C_Window100__LB_PROJECT_TEMPLATES!.addItem(tpl![0])
        wend
        close (ch)
    methodend

    rem /**
    rem * Method onExitDialog:
    rem * Your custom exit code
    rem */
    method public void onExitDialog()
    	rem /** DLGWIZ_OPTION_BEGIN("translator") **/
        rem #Translator!.getTranslationBundle().save()
        rem /** DLGWIZ_OPTION_END("translator") **/
        if #traceChan then
            call "bbtracer.bbj::stopTrace",#traceChan
            call "bbtracer.bbj::showTrace",#traceFile$,#traceMode$
        endif
    methodend

    rem /**
    rem * Method postCancelAnswer:
    rem * Set dialog answer to "canceled"
    rem */
    method public void postCancelAnswer()
        #super!.setAnswer(0)
        #API!.postCustomEvent("CancelAnswer",null())
    methodend

    rem /**
    rem * Method postReturnAnswer:
    rem * Set dialog answer to "normal return"
    rem */
    method public void postReturnAnswer()
        #super!.setAnswer(1)
        #API!.postCustomEvent("ReturnAnswer",null())
    methodend

    rem /**
    rem * Method onMDIClosing:
    rem * Handler for the MDI closing
    rem */
    method public void onMDIClosing(BBjMDIClosingEvent pEvent!)
        rem uncomment the next line to veto the MDI Close
        rem #MDI!.vetoMDIClose()
        #MDI!.approveMDIClose()
        #postCancelAnswer()
    methodend

    rem /**
    rem * Method doDebugTrace:
    rem * Show/hide console, start/stop trace
    rem * @param BBjNamespaceEvent event! 
    rem */
    method public void doDebugTrace(BBjNamespaceEvent event!)
        debug_mode = #GroupNS!.getValue("debug_mode",err=*next)>0
        trace_mode = #GroupNS!.getValue("trace_mode",err=*next)>0

        if debug_mode then
            seterr 0
            setesc 0
            print(0)'show'
        else
            print(0)'hide'
        endif

        if trace_mode then
            traceDir$=#traceDir$, traceMode$=#traceMode$, traceChan=#traceChan, traceFile$=#traceFile$
            call "bbtracer.bbj::startTrace",traceDir$,traceMode$,traceChan,traceFile$
            #traceDir$=traceDir$, #traceMode$=traceMode$, #traceChan=traceChan, #traceFile$=traceFile$
        else
            if #traceChan then
                traceChan=#traceChan
                call "bbtracer.bbj::stopTrace",traceChan
                #traceChan=traceChan
                call "bbtracer.bbj::showTrace",#traceFile$,#traceMode$
            endif
        endif
    methodend

    rem /** DLGWIZ_OPTION_BEGIN("toolbar[Maintenance Form]") **/
    rem rem /**
    rem rem * Method onTBarBtnNEWPush:
    rem rem * Event handler for the NEW toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnNEWPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnDELPush:
    rem rem * Event handler for the DEL toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnDELPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnSAVPush:
    rem rem * Event handler for the SAV toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnSAVPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnFSTPush:
    rem rem * Event handler for the FST toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnFSTPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnPRVPush:
    rem rem * Event handler for the PRV toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnPRVPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnNXTPush:
    rem rem * Event handler for the NXT toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnNXTPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnLSTPush:
    rem rem * Event handler for the LST toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnLSTPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnSCHPush:
    rem rem * Event handler for the SCH toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnSCHPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnDMRPush:
    rem rem * Event handler for the DMR toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnDMRPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnOPTPush:
    rem rem * Event handler for the OPT toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnOPTPush(BBjButtonPushEvent pEvent!)
    rem methodend
    rem /** DLGWIZ_OPTION_END("toolbar[Maintenance Form]") **/

    rem /** DLGWIZ_OPTION_BEGIN("toolbar[Maintenance Grid]") **/
    rem rem /**
    rem rem * Method onTBarBtnADEPush:
    rem rem * Event handler for the ADE toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnADEPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnINSPush:
    rem rem * Event handler for the INS toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnINSPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnEDBPush:
    rem rem * Event handler for the EDB toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnEDBPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnDELPush:
    rem rem * Event handler for the DEL toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnDELPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnSAVPush:
    rem rem * Event handler for the SAV toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnSAVPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnFNDPush:
    rem rem * Event handler for the FND toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnFNDPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnDMRPush:
    rem rem * Event handler for the DMR toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnDMRPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnEXPPush:
    rem rem * Event handler for the EXP toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnEXPPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnCALPush:
    rem rem * Event handler for the CAL toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnCALPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnLNKPush:
    rem rem * Event handler for the LNK toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnLNKPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnDRLPush:
    rem rem * Event handler for the DRL toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnDRLPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnOPTPush:
    rem rem * Event handler for the OPT toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnOPTPush(BBjButtonPushEvent pEvent!)
    rem methodend
    rem /** DLGWIZ_OPTION_END("toolbar[Maintenance Grid]") **/

    rem /** DLGWIZ_OPTION_BEGIN("toolbar[Header Detail]") **/
    rem rem /**
    rem rem * Method onTBarBtnNEWPush:
    rem rem * Event handler for the NEW toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnNEWPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnADEPush:
    rem rem * Event handler for the ADE toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnADEPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnINSPush:
    rem rem * Event handler for the INS toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnINSPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnEDBPush:
    rem rem * Event handler for the EDB toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnEDBPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnDELPush:
    rem rem * Event handler for the DEL toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnDELPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnSAVPush:
    rem rem * Event handler for the SAV toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnSAVPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnFSTPush:
    rem rem * Event handler for the FST toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnFSTPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnPRVPush:
    rem rem * Event handler for the PRV toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnPRVPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnNXTPush:
    rem rem * Event handler for the NXT toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnNXTPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnLSTPush:
    rem rem * Event handler for the LST toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnLSTPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnSCHPush:
    rem rem * Event handler for the SCH toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnSCHPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnFNDPush:
    rem rem * Event handler for the FND toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnFNDPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnDMRPush:
    rem rem * Event handler for the DMR toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnDMRPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnEXPPush:
    rem rem * Event handler for the EXP toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnEXPPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnCALPush:
    rem rem * Event handler for the CAL toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnCALPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnLNKPush:
    rem rem * Event handler for the LNK toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnLNKPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnDRLPush:
    rem rem * Event handler for the DRL toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnDRLPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnOPTPush:
    rem rem * Event handler for the OPT toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnOPTPush(BBjButtonPushEvent pEvent!)
    rem methodend
    rem /** DLGWIZ_OPTION_END("toolbar[Header Detail]") **/

    rem /** DLGWIZ_OPTION_BEGIN("toolbar[Options Entry Form]") **/
	rem rem /**
    rem rem * Method onTBarBtnNEWPush:
    rem rem * Event handler for the NEW toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnNEWPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnSAVPush:
    rem rem * Event handler for the SAV toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnSAVPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnRUNPush:
    rem rem * Event handler for the RUN toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnRUNPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnDMRPush:
    rem rem * Event handler for the DMR toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnDMRPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnOPTPush:
    rem rem * Event handler for the OPT toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnOPTPush(BBjButtonPushEvent pEvent!)
    rem methodend
    rem /** DLGWIZ_OPTION_END("toolbar[Options Entry Form]") **/

    rem /** DLGWIZ_OPTION_BEGIN("toolbar[Options Entry Grid]") **/
    rem rem /**
    rem rem * Method onTBarBtnADEPush:
    rem rem * Event handler for the ADE toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnADEPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnINSPush:
    rem rem * Event handler for the INS toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnINSPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnEDBPush:
    rem rem * Event handler for the EDB toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnEDBPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnDELPush:
    rem rem * Event handler for the DEL toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnDELPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnSAVPush:
    rem rem * Event handler for the SAV toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnSAVPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnRUNPush:
    rem rem * Event handler for the RUN toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnRUNPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnFNDPush:
    rem rem * Event handler for the FND toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnFNDPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnDMRPush:
    rem rem * Event handler for the DMR toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnDMRPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnEXPPush:
    rem rem * Event handler for the EXP toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnEXPPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnCALPush:
    rem rem * Event handler for the CAL toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnCALPush(BBjButtonPushEvent pEvent!)
    rem methodend

    rem rem /**
    rem rem * Method onTBarBtnOPTPush:
    rem rem * Event handler for the OPT toolbar button
    rem rem * @param BBjButtonPushEvent Button Push
    rem rem */
    rem method public void onTBarBtnOPTPush(BBjButtonPushEvent pEvent!)
    rem methodend
    rem /** DLGWIZ_OPTION_END("toolbar[Options Entry Grid]") **/


	rem /**
	rem  * Method Window100__ON_CLOSE: 
	rem  * Event handler for the ON_CLOSE event for Window100
	rem  * @param BBjCloseEvent
	rem  */
	method public void Window100__ON_CLOSE(BBjCloseEvent pEvent!)
		#postCancelAnswer()
	methodend

	rem /**
	rem  * Method DIR_SELECTOR__ON_FILECHOOSER_CANCEL: 
	rem  * Event handler for the ON_FILECHOOSER_CANCEL event for DIR_SELECTOR
	rem  * @param BBjFileChooserCancelEvent
	rem  */
	method public void DIR_SELECTOR__ON_FILECHOOSER_CANCEL(BBjFileChooserCancelEvent pEvent!)
		#postCancelAnswer()
	methodend

	rem /**
	rem  * Method DIR_SELECTOR__ON_FILECHOOSER_APPROVE: 
	rem  * Event handler for the ON_FILECHOOSER_APPROVE event for DIR_SELECTOR
	rem  * @param BBjFileChooserApproveEvent
	rem  */
	method public void DIR_SELECTOR__ON_FILECHOOSER_APPROVE(BBjFileChooserApproveEvent pEvent!)

	    sel = #C_Window100__LB_PROJECT_TEMPLATES!.getSelectedIndex()
	    if sel>-1 then
           tpl! = CAST(String,#templates!.get(sel)).split(";")
	    else
	        a=msgbox("Please select a project template on the left!",0,"Error")
	        methodret
	    fi

	    d! = pEvent!.getSelectedFiles().get(0)
		if #checkDirectory(d!) then
		    #createProject(d!,tpl![1])
		    a=msgbox("Created project template in "+d!)
		    
		    #adjustPom(d!)
		    
		    #ProjectDir$ = str(d!)
		    #postReturnAnswer()
		fi
	methodend
	
	method private String getLib()
	    ch=unt
	    open (ch)"DWCJ/lib"
	    while 1
	        read record (ch,end=*break)f$
	        if len(f$)>5 and f$(1,5)="dwcj-" then
	            lib$=BBjAPI().getFileSystem().resolvePath("DWCJ/lib/"+f$)
	            break
	        fi
	    wend
	    close (ch)
	    methodret lib$
	methodend
	
	method private void adjustPom(String d!)
	    
	        lib$=#getLib()
	        if lib$="" then
	            a=msgbox("You need to manually adjust your pom.xml",0,"Could not find lib")
	            methodret
	        fi
	        
	        ch=unt
	        open (ch)d!+"/pom.xml"
	        read record (ch,siz=dec(fin(ch)(1,4)))pom$
	        close (ch)
	        
	        p = pos("<!-- adjust this line or create dwcj-lib" = pom$)
	        if p>0 then
	            lib$ = #getLib()
	            x$="<!-- dwc-lib set by project seed tool -->"+$0a$+"<dwcj-lib>"+lib$+"</dwcj-lib>"+$0a$
	            pom$=pom$(1,p-1)+x$+pom$(p)
	        fi
            open (ch,mode="O_CREATE,O_TRUNC")d!+"/pom.xml"
            write (ch)pom$
            close (ch)
	        
	        
	
	methodend

	method private Boolean checkDirectory(String d!)

	        declare File dir!
	        dir! = new File(d!)
	        if dir!.exists() then
	            if dir!.isDirectory() then
	                rem check if directory is empty
	                ch=unt
	                open (ch)d!
	                empty=1
	                while 1
	                    read record (ch,end=*break)tmp$
	                    if tmp$="." or tmp$=".." then continue
	                    empty=0
	                    break
	                wend
	                close (ch)
	                if empty then
	                    methodret Boolean.TRUE
	                else
	                    a=msgbox("Directory must be empty!",0,"Error")
	                    methodret Boolean.FALSE
	                fi

	            else
	                a=msgbox(d!+" is not a directory",0,"Error")
	                methodret Boolean.FALSE
	            fi
	        else
	            a=msgbox("Directory "+d!+" does not exist, Create?",4,"Directory does not exist")
	            if a=6 then
	                dir!.mkdirs()
	                methodret #checkDirectory(dir!.getAbsolutePath())

	            fi
	        fi
	        methodret Boolean.FALSE

	methodend

	method public Boolean createProject(String path!, String urlstring!)

	    url! = new URL(urlstring! + "/archive/main.zip")

        declare File zipFile!
        zipFile! = File.createTempFile("ProjectTemplate",".zip")
        zipFile!.deleteOnExit()

        use ::PluginManagerLauncher.bbj::DownloadHelper
        use ::PluginManagerLauncher.bbj::ProxyService

        declare DownloadHelper downloadHelper!
        downloadHelper! = new DownloadHelper()

        downloadHelper!.setDownloadURL(url!)
        downloadHelper!.setOutputFile(zipFile!)

        if !downloadHelper!.isSiteReachable(Boolean.FALSE) then
            downloadHelper!.setProxy(ProxyService.getProxyFromUserProperties())
            downloadHelper!.setProxyCredentials(ProxyService.getProxyCredentialsFromUserProperties())

            if downloadHelper!.isSiteReachable(Boolean.TRUE) then
                downloadHelper!.downloadFile(Boolean.TRUE)
            else
                if #inTerminalEnvironment() then
                    print "Failed to establish the connection to the github repository"
                    print "Terminating"
                    release
                endif

                declare HttpHost proxy!
                declare ProxyConfigurationWindow window!
                declare UsernamePasswordCredentials proxyCredentials!

                cancelProxySettings! = Boolean.FALSE
                while !downloadHelper!.isSiteReachable(Boolean.TRUE) AND !cancelProxySettings!
                    window! = #promptForProxySettings(proxy!)

                    if window! = null() OR window!.dialogCanceled() then
                        cancelProxySettings! = Boolean.TRUE
                        break
                    endif

                    port = window!.getPort()
                    hostname! = window!.getHostName()

                    proxy! = new HttpHost(hostname!, port)
                    downloadHelper!.setProxy(proxy!)

                    if window!.areCredentialsRequired() then
                        username! = window!.getUsername()
                        password! = window!.getPassword()

                        downloadHelper!.setProxyCredentials(new UsernamePasswordCredentials(username!, password!))
                    endif
                wend

                if downloadHelper!.isSiteReachable(Boolean.TRUE) then
                    downloadHelper!.downloadFile(Boolean.TRUE)
                endif
            endif
        else
            downloadHelper!.downloadFile(Boolean.FALSE)
        endif

        if !downloadHelper!.wasDownloadSuccessful() then
            zipFile!.delete(err=*next)

            ? 'cs'
            if downloadHelper!.getDownloadError() = null() then
                ? "Failed to establish the connection to the github repository"
            else
                ? 'cs', str(downloadHelper!.getDownloadError())
            endif

            methodret Boolean.FALSE
        endif

        ProxyService.saveProxy(downloadHelper!.getProxy())
        ProxyService.saveProxyCredentials(downloadHelper!.getProxyCredentials())

        rem unzips the zip file to the given directory
        #unzipArchive(zipFile!, new File(path!))

        rem deletes the zip file
        zipFile!.delete()

        methodret Boolean.TRUE
    methodend

	rem /**
	rem  * Method BTN_TEMPLATE_HOME__ON_BUTTON_PUSH: 
	rem  * Event handler for the ON_BUTTON_PUSH event for BTN_TEMPLATE_HOME
	rem  * @param BBjButtonPushEvent
	rem  */
	method public void BTN_TEMPLATE_HOME__ON_BUTTON_PUSH(BBjButtonPushEvent pEvent!)
        sel = #C_Window100__LB_PROJECT_TEMPLATES!.getSelectedIndex()
        if sel>-1 then
            tpl! = CAST(String,#templates!.get(sel)).split(";")
            url$ = tpl![1]
            BBjAPI().getThinClient().browse(url$)
        fi
	methodend

	rem /**
	rem  * Method LB_PROJECT_TEMPLATES__ON_LIST_CLICK: 
	rem  * Event handler for the ON_LIST_CLICK event for LB_PROJECT_TEMPLATES
	rem  * @param BBjListClickEvent
	rem  */
	method public void LB_PROJECT_TEMPLATES__ON_LIST_CLICK(BBjListClickEvent pEvent!)
		sel = pEvent!.getSelectedIndex()
		tpl! = CAST(String,#templates!.get(sel)).split(";")
		#C_CED_DESC!.setText(tpl![2])
	methodend

    rem /**
    rem  * Unzips the given zip archive into the given output folder.
    rem  * 
    rem  * @param zipFile! The zip file handle.
    rem  * @param outputFolder! The output directory in which the content of the zip file will be extracted.
    rem  */ 
    method public void unzipArchive(File zipFile!, File outputFolder!)
        seterr unzipArchive_ErrorHandler

            rem Hack to create a byte[1024] in BBj
            declare ByteArrayOutputStream bos!
            bos! = new ByteArrayOutputStream(1024)
            for i=0 to 1024-1
                bos!.write(0)
            next i
            bytes! = bos!.toByteArray()

            declare ZipInputStream zipInputStream!
            zipInputStream! = new ZipInputStream(new FileInputStream(zipFile!))

            declare ZipEntry zipEntry!
            zipEntry! = zipInputStream!.getNextEntry()

            while(zipEntry! <> null())
                fileName! = zipEntry!.getName()

                rem removing the github folder name since we are using a custom folder
                fileName! = fileName!.substring(fileName!.indexOf("/")+1)

                newFile! = new File(outputFolder!.getAbsolutePath() + File.separator + fileName!)
                print "unzip: " + str(fileName!)

                new File(newFile!.getParent()).mkdirs()

                byteRead = zipInputStream!.read(bytes!)

                rem First checking to avoid creating files instead of folders
                if(byteRead > 0) then
                    fos! = new FileOutputStream(newFile!)

                    while(byteRead > 0)
                        fos!.write(bytes!, 0, byteRead)
                        byteRead = zipInputStream!.read(bytes!)
                    wend

                    fos!.close()
                endif

                zipEntry! = zipInputStream!.getNextEntry()
            wend

        unzipArchive_ErrorHandler:
            zipInputStream!.closeEntry(err=*next)
            zipInputStream!.close(err=*next)

            bos!.close(err=*next)
    methodend

classend

declare CreateProjectDlg myDialog!
myDialog! = new CreateProjectDlg()


configure_home$=BBjAPI().getFileSystem().resolvePath("DWCJ/cfg/")
chdir configure_home$

rem /** DLGWIZ_SET_BEGIN **/
rem /** DLGWIZ_SET_END **/


if myDialog!.doModal() and info(3,6)<>"5" then
    print 'show',
    print "Passed required fields check"
rem /** DLGWIZ_GET_BEGIN **/
rem /** DLGWIZ_GET_END **/

    a=msgbox(myDialog!.getProjectDir()+"/target/classes")

    input "Press ENTER to release",dummy$
endif

release